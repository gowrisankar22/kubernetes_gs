#!/bin/sh
set -e

SMTPPORT=25
SMTP_USERNAME="$(kubectl get secrets/mail -n kube-system -o json | jq -r '.data.username' | base64 -d)"
SMTP_PASSWORD="$(kubectl get secrets/mail -n kube-system -o json | jq -r '.data.password' | base64 -d)"
SMTPSRV="$(kubectl get secrets/mail -n kube-system -o json | jq -r '.data.smtpserver' | base64 -d)"
MAIL_FROM="$(kubectl get secrets/mail -n kube-system -o json | jq -r '.data.mailfrom' | base64 -d)"
MAIL_BCC="$(kubectl get secrets/mail -n kube-system -o json | jq -r '.data.mailbcc' | base64 -d)"

rm -rf /tmp/nodecpu
rm -rf /tmp/nodemem
rm -rf /tmp/nodestatus

echo "Check kubectl command exists"
command -v kubectl >/dev/null 2>&1 || { echo >&2 "I require kubectl but it's not installed.  Aborting."; exit 1; }

function sendemail() {
    mail_subject="$3"
    mail_message_sign="
Thank you,
k8s"
    mail_body="Hello All,
        Node is not healthy. Please have look into it by running kubectl get nodes.
        $2"
    if ! echo -e "${mail_body}\n${mail_message_sign}" | s-nail -S  ssl-verify=ignore -S  smtp="${SMTPSRV}:${SMTPPORT}" -S smtp-auth-user="${SMTP_USERNAME}" -S smtp-auth-password="${SMTP_PASSWORD}" -r "${MAIL_FROM}" -s "${mail_subject}" -b "${MAIL_BCC}" "${1}"; then
        echo "***Failed***"
    fi
}

nodes="$(kubectl get nodes | awk '{print $1}' | tail -n +2 | tr -s '\n'  ' ')"
nodestatus="$(kubectl get nodes | awk '{print $2}' | tail -n +2 | tr -s '\n'  ' ')"

fun() {
    set $nodestatus
    for i in $nodes; do
        #echo command "$i" "$1"
        nodename=$i
        nodestatus=$1
        #echo "$var1:$var2"
        if [ $nodestatus == "Ready" ]; then
           result=$(kubectl top node "${nodename}")
           cpuper="$(echo $result | awk '{print $8}' | tr -d "%")"
           echo $cpuper
           if [[ "${cpuper}" -gt 80 ]]; then
                echo "nodename: $nodename; cpuutilized=${cpuper}%" >> /tmp/nodecpu
           fi
           memper=$(echo $result | awk '{print $10}' | tr -d "%")
           echo $memper
           if [[ "${memper}" -gt 80 ]]; then
               echo "nodename : $nodename; memutilized=${memper}%" >> /tmp/nodemem
           fi
        else
          echo "nodename : $nodename; status: $nodestatus" >> /tmp/nodestatus
        fi
        shift
    done
}

fun

if test -e /tmp/nodecpu; then
   cpu="$(cat  /tmp/nodecpu)"
   echo "sending email"
   mailsubject="Alert:CPU is high"
   sendemail "${SMTP_USERNAME}" "${cpu}" "${mailsubject}"    
fi

if test -e /tmp/nodemem; then
   mem="$(cat  /tmp/nodemem)"
   echo "sending email"
    mailsubject="Alert:Memory is high"
   sendemail "${SMTP_USERNAME}" "${mem}" "${mailsubject}"
fi

if test -e /tmp/nodestatus; then
   nodestatus="$(cat /tmp/nodestatus)"
   echo "sending email"
   mailsubject="Alert:Node is down"
   sendemail "${SMTP_USERNAME}" "${nodestatus}" "${mailsubject}" 
fi

echo "Scanning is completed!!!"
